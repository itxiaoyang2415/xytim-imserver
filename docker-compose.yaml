version: '3.8'

services:
  # MySQL 8.0 数据库服务
  mysql:
    image: mysql:8.0
    container_name: im-admin-mysql
    restart: always
    environment:
      # 设置 root 用户密码
      MYSQL_ROOT_PASSWORD: 123456
      # 设置时区
      TZ: Asia/Shanghai
    ports:
      - "3307:3306"  # 宿主机使用 3307 端口，避免与已有 MySQL 冲突
    volumes:
      # 数据持久化
      - mysql-data:/var/lib/mysql
      # 配置文件
      - ./docker/mysql/conf:/etc/mysql/conf.d
      # 初始化脚本（如果有的话）
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --max_connections=1000
      - --lower_case_table_names=1
    networks:
      - im-network

  # Redis 服务
  redis:
    image: redis:7-alpine
    container_name: im-admin-redis
    restart: always
    ports:
      - "6380:6379"  # 宿主机使用 6380 端口，避免与已有 Redis 冲突
    volumes:
      # 数据持久化
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - im-network

  # MinIO 对象存储服务
  minio:
    image: minio/minio:latest
    container_name: im-admin-minio
    restart: always
    environment:
      # MinIO 访问密钥
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      # API 端口
      - "9100:9000"  # 宿主机使用 9100 端口，避免端口冲突
      # 控制台端口
      - "9101:9001"  # 宿主机使用 9101 端口，避免端口冲突
    volumes:
      # 数据持久化
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - im-network

  # IM Platform 后端服务
  im-platform:
    build:
      context: ./im-platform
      dockerfile: Dockerfile
    container_name: im-platform-app
    restart: always
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - TZ=Asia/Shanghai
    depends_on:
      - mysql
      - redis
      - minio
    networks:
      - im-network

  # IM Server Netty 服务
  im-server:
    build:
      context: ./im-server
      dockerfile: Dockerfile
    container_name: im-server-app
    restart: always
    ports:
      - "8878:8878"  # WebSocket 端口
      - "8879:8879"  # TCP Socket 端口
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - TZ=Asia/Shanghai
    depends_on:
      - redis
    networks:
      - im-network

# 数据卷定义
volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local
  minio-data:
    driver: local

# 网络定义
networks:
  im-network:
    driver: bridge

